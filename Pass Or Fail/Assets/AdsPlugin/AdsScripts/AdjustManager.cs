using com.adjust.sdk;using GoogleMobileAds.Api;using UnityEngine;public class AdjustManager : MonoBehaviour{    public static AdjustManager Instance;    private void Awake()    {        Instance = this;    }    public void Admob(AdValue adValue)    {        double amount = adValue.Value / 1000000f;        var adjustAdRevenue = new AdjustAdRevenue(AdjustConfig.AdjustAdRevenueSourceAdMob);        adjustAdRevenue.setRevenue(amount, "USD");        var impressionParameters = new[]        {            new Firebase.Analytics.Parameter("ad_platform", "Admob"),            new Firebase.Analytics.Parameter("value", amount),            new Firebase.Analytics.Parameter("currency", "USD"),         };        Firebase.Analytics.FirebaseAnalytics.LogEvent("paid_ad_impression", impressionParameters);        Adjust.trackAdRevenue(adjustAdRevenue);    }    public void Max(MaxSdkBase.AdInfo adInfo)    {        var amount = adInfo.Revenue;        var adjustAdRevenue = new AdjustAdRevenue(AdjustConfig.AdjustAdRevenueSourceAppLovinMAX);        adjustAdRevenue.setRevenue(amount, "USD");        adjustAdRevenue.setAdRevenueNetwork(adInfo.NetworkName);        adjustAdRevenue.setAdRevenueUnit($"{adInfo.AdFormat}_{adInfo.AdUnitIdentifier}");        var impressionParameters = new[]        {            new Firebase.Analytics.Parameter("ad_platform", "Max"),            new Firebase.Analytics.Parameter("value", amount),            new Firebase.Analytics.Parameter("currency", "USD"),         };        if(adInfo.NetworkName != "AdMob" && adInfo.NetworkName != "Google Ad Manager Native" && adInfo.NetworkName != "Google AdMob")            Firebase.Analytics.FirebaseAnalytics.LogEvent("ad_impression", impressionParameters);        Firebase.Analytics.FirebaseAnalytics.LogEvent("paid_ad_impression", impressionParameters);        Adjust.trackAdRevenue(adjustAdRevenue);    }}